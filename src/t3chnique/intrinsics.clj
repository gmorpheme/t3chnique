(ns t3chnique.intrinsics
  (:refer-clojure :exclude [concat abs max min]))

(defprotocol ^{:id "t3vm/010006"} t3vm
  "Internal VM operations"
  (t3AllocProp [_])
  (t3DebugTrace [_ mode & args])
  (t3GetGlobalSymbols [_ which?])
  (t3GetNamedArg [_ name defval?])
  (t3GetNamedArgList [_])
  (t3GetStackTrace [_ level? flags?])
  (t3GetVMBanner [_])
  (t3GetVMID [_])
  (t3GetVMPreinitMode [_])
  (t3GetVMVsn [_])
  (t3RunGC [_])
  (t3SetSay [_ val]))

(defprotocol ^{:id "tads-gen/030008"} tads-gen
  "General utility and data manipulation functions"
  (abs [_ val])
  (concat [_ & args])
  (dataType [_ val])
  (firstObj [_ cls? flags?])
  (getArg [_ idx])
  (getFuncParams [_ funcptr])
  (getTime [_ timeType?])
  (makeList [_ val repeatCount?])
  (makeString [_ val repeatCount?])
  (max [_ val1 & args])
  (min [_ val1 & args])
  (nextObj [_ obj cls? flags?])
  (rand [_ x & args])
  (randomize [_ & args])
  (restartGame [_])
  (restoreGame [_ filename])
  (rexGroup [_ groupNum])
  (rexMatch [_ pat str index?])
  (rexReplace [_ pat str replacement flags? index? limit?])
  (rexSearch [_ pat str index?])
  (rexSearchLast [_ pat str index?])
  (saveGame [_ filename metaTable?])
  (savepoint [_])
  (sgn [_ val])
  (sprintf [_ format & args])
  (toInteger [_ val radix?])
  (toNumber [_ val radix?])
  (toString [_ val radix? isSigned?])
  (undo [_]))

(defprotocol ^{:id "tads-io/030007"} tads-io
  "Interactive / Real Time IO"
  (bannerClear [_ handle])
  (bannerCreate [_ parent where other windowType align size sizeUnits style])
  (bannerDelete [_ handle])
  (bannerFlush [_ handle])
  (bannerGetInfo [_ banner])
  (bannerGoTo [_ handle row col])
  (bannerSay [_ & args])
  (bannerSetScreenColor [_ handle color])
  (bannerSetSize [_ handle size sizeUnits isAdvisory])
  (bannerSetTextColor [_ handle fg bg])
  (bannerSizeToContents [_ handle])
  (clearScreen [_])
  (flushOutput [_])
  (getLocalCharSet [_])
  (inputDialog [_ icon prompt buttons defaultButton cancelButton])
  (inputEvent [_ timeout?])
  (inputFile [_ prompt dialogType fileType flags])
  (inputKey [_])
  (inputLine [_])
  (inputLineCancel [_ reset])
  (inputLineTimeout [_ timeout?])
  (logConsoleClose [_ handle])
  (logConsoleCreate [_ filename charset width])
  (logConsoleSay [_ handle])
  (morePrompt [_])
  (resExists [_ resname])
  (setLogFile [_ fname logType?])
  (setScriptFile [_filename flags?])
  (statusMode [_ mode])
  (statusRight [_ txt])
  (systemInfo [_ infoType & args])
  (tadsSay [_ val & args])
  (timeDelay [_ delay]))

(defprotocol ^{:id "tads-net/030001"} tads-net
  "Access to network features."
  (connectWebUI [_ server path])
  (getHostName [_])
  (getLaunchHostAddr [_])
  (getLocalIP [_])
  (getNetEvent [_ timeout?])
  (getNetStorageURL [_ resource])
  (sendNetRequest [_ id url]))